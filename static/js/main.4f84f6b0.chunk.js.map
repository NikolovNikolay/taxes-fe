{"version":3,"sources":["components/checkout/Success.js","components/checkout/Fail.js","components/checkout/Checkout.js","components/instructions/Instructions.js","components/terms/Terms.js","components/about/AboutMe.js","components/RequiredLabel.js","components/upload/UploadFree.js","App.js","reportWebVitals.js","index.js"],"names":["defaultCopyButtonLabel","clickedCopyButtonLabel","SuccessCheckout","requestId","props","state","coupon","requestCopyButtonLabel","couponCopyButtonLabel","handleRequestIDCopyClick","setState","setTimeout","handleCouponCopyClick","axios","post","process","this","headers","btoa","then","res","data","catch","err","console","log","history","Form","Group","FormText","className","FormLabel","InputGroup","FormControl","value","disabled","placeholder","Append","text","Button","variant","onClick","block","push","React","Component","SuccessCheckoutWithRouter","withRouter","FailCheckout","useHistory","useState","copyRequestIdButtonLabel","setCopyRequestIdButtonLabel","contactMail","trim","href","Row","md","Checkout","query","URLSearchParams","useLocation","search","ri","get","success","Container","fluid","id","Col","sm","Success","Fail","Instructions","showExampleModal","setShowExampleModal","target","e","preventDefault","ButtonGroup","Modal","size","show","Header","Title","Body","Footer","Terms","rel","AboutMe","RequiredLabel","label","Label","UploadFree","year","setYear","type","setType","email","setEmail","files","setFiles","validEmail","setValidEmail","submitted","setSubmitted","showModal","setShowModal","setCoupon","isValidCoupon","setIfIsValidCoupon","agreedWithTerms","setAgreedWithTerms","errorMessage","setErrorMessage","handleSubmit","a","formData","FormData","statements","document","querySelector","i","length","append","uploadResponse","request_id","response","description","to","controlId","Dropdown","DropdownButton","title","onSelect","Item","eventKey","File","onChange","fNames","name","multiple","custom","Text","muted","map","fName","Control","pattern","RegExp","test","toLowerCase","uuidValidate","xs","FormCheck","style","htmlFor","aria-labelledby","centered","Spinner","animation","role","App","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f84f6b0.chunk.js","sourcesContent":["import {Button, Form, FormControl, FormLabel, FormText, InputGroup} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport {withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport axios from \"axios\";\n\nconst defaultCopyButtonLabel = \"Copy\";\nconst clickedCopyButtonLabel = \"Copied\";\n\nclass SuccessCheckout extends React.Component {\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    };\n\n    requestId = this.props.requestId\n    state = {\n        coupon: \"\",\n        requestCopyButtonLabel: defaultCopyButtonLabel,\n        couponCopyButtonLabel: defaultCopyButtonLabel,\n    }\n\n    componentDidMount() {\n        const baseUrl = process.env.REACT_APP_API_BASE_URL;\n        axios.post(`${baseUrl}/api/payments/obtain-coupon`,\n            {\n                \"request_id\": this.requestId,\n            }, {\n                headers: {\n                    \"X-API-KEY\": btoa(process.env.REACT_APP_CLIENT_TOKEN)\n                }\n            })\n            .then(res => {\n                const coupon = res.data.coupon\n                if (this.state.coupon !== \"\" && coupon === \"\") {\n                    return\n                }\n                this.setState({...this.state, coupon})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleRequestIDCopyClick = () => {\n        this.setState({...this.state, requestCopyButtonLabel: clickedCopyButtonLabel})\n        setTimeout(() =>\n            this.setState({...this.state, requestCopyButtonLabel: defaultCopyButtonLabel}), 500\n        )\n    }\n\n    handleCouponCopyClick = () => {\n        this.setState({...this.state, couponCopyButtonLabel: clickedCopyButtonLabel})\n        setTimeout(() =>\n            this.setState({...this.state, couponCopyButtonLabel: defaultCopyButtonLabel}), 500\n        )\n    }\n\n    render() {\n        const {history} = this.props;\n        return (\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\">\n                        <h4>Your request was processed successfully and a report is on its way to your mailbox</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <FormLabel>Request ID</FormLabel>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.requestId}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={this.requestId}>\n                                <Button disabled={this.requestId == null || this.requestId === \"\"}\n                                        variant={\"outline-secondary\"}\n                                        onClick={this.handleRequestIDCopyClick}>{this.state.requestCopyButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <FormLabel>Coupon code</FormLabel>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.state.coupon}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={this.state.coupon}>\n                                <Button disabled={this.state.coupon === \"\"}\n                                        variant={\"outline-secondary\"}\n                                        onClick={this.handleCouponCopyClick}>{this.state.couponCopyButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n            </Form>\n        )\n    }\n}\n\nconst SuccessCheckoutWithRouter = withRouter(SuccessCheckout);\n\nexport default SuccessCheckoutWithRouter;","import {Button, Form, FormControl, FormText, InputGroup, Row} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport React, {useState} from \"react\";\nimport {useHistory} from 'react-router-dom';\n\nfunction FailCheckout({requestId}) {\n    const history = useHistory();\n\n    const defaultCopyButtonLabel = \"Copy\";\n    const clickedCopyButtonLabel = \"Copied\";\n\n    let [copyRequestIdButtonLabel, setCopyRequestIdButtonLabel] = useState(defaultCopyButtonLabel);\n    const contactMail = process.env.REACT_APP_CONTACT_EMAIL;\n\n    const handleRequestIDCopyClick = () => {\n        setCopyRequestIdButtonLabel(clickedCopyButtonLabel)\n        setTimeout(() =>\n            setCopyRequestIdButtonLabel(defaultCopyButtonLabel), 500\n        )\n    }\n    return (\n        requestId != null && requestId.trim(\" \") !== \"\" ?\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\"><h4>Unfortunately, we could not process your payment</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={requestId}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={requestId}>\n                                <Button variant={\"outline-secondary\"}\n                                        onClick={handleRequestIDCopyClick}>{copyRequestIdButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <FormText>\n                        Above is your request ID. Please try submitting another request or send this to <a\n                        href={\"mailto:\" + contactMail}\n                        className={\"border-bottom\"}>{contactMail}</a> and ask for details\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n            </Form> :\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\"><h4>Your request failed</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <p>\n                        You were not charged for this operation. If this happened more than once please\n                        contact <a\n                        href={\"mailto:\" + contactMail}\n                        className={\"border-bottom\"}>{contactMail}</a> for more details.\n                        Sorry for the inconvenience.\n                    </p>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Row md={15} className={\"justify-content-md-center\"}>\n                    <Button onClick={() => history.push(\"/\")}>Try again</Button>\n                </Row>\n            </Form>\n    )\n}\n\nexport default FailCheckout;","import {useLocation} from \"react-router-dom\";\nimport SuccessCheckoutWithRouter from \"./Success\";\nimport FailCheckout from \"./Fail\";\nimport './Checkout.css'\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport * as React from \"react\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Checkout() {\n    let query = useQuery()\n    let ri = query.get(\"request_id\")\n    let success = query.get(\"success\")\n\n    return (\n        <Container fluid id=\"checkout-container\">\n            <Row className=\"justify-content-md-center\">\n                <Col className=\"justify-content-md-center\" md={7} sm={15}>\n                    {\n                        success === \"true\" ?\n                            <SuccessCheckoutWithRouter requestId={ri}/> :\n                            <FailCheckout requestId={ri}/>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Checkout;","import {Button, ButtonGroup, Container, Form, FormText, Modal,} from \"react-bootstrap\";\nimport './Instructions.css'\nimport {useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\n\nfunction Instructions() {\n\n    const history = useHistory();\n    let [showExampleModal, setShowExampleModal] = useState(false)\n\n    const handleGoToSubmit = (e) => {\n        e.preventDefault()\n        history.push(\"/\")\n    }\n\n    const handleExampleModalClose = (e) => {\n        e.preventDefault()\n        setShowExampleModal(false)\n    }\n\n    const handleExampleModalShow = (e) => {\n        e.preventDefault()\n        setShowExampleModal(true)\n    }\n\n    return (\n        <>\n            <Container id=\"instructions-container\">\n                <Form>\n                    <FormText>\n                        <section id={\"contact\"}>\n                            <header>\n                                <h4>\n                                    How do I reach you out?\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                You can send me an email <a\n                                href={`mailto:${process.env.REACT_APP_CONTACT_EMAIL}`}>{process.env.REACT_APP_CONTACT_EMAIL}</a>.\n                                I will try responding shortly.\n                            </p>\n                            <p>\n                                If you find this service useful you can <a href={\"https://revolut.me/nikinikolov\"}\n                                                                           target={\"_new\"}>buy me a beer or two.</a>\n                            </p>\n                        </section>\n                        <br/>\n                        <section id={\"disclaimer\"}>\n                            <header>\n                                <h4>\n                                    Disclaimer\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                <b>\n                                    I am not a tax consultant and I do not undertake any responsibility if you plan to\n                                    use\n                                    my paid cloud service to come up with calculations that you can use for Bulgarian\n                                    tax\n                                    declaration purposes. There might be discrepancies between the amounts that you need\n                                    to\n                                    declare and the ones calculated by your accountant.\n                                    <br/>\n                                    The web service works only with\n                                    USD\n                                    transactions from eToro and Revolut as well as only with US financial instruments.\n                                    The\n                                    web service is built specifically for the individual who needs to do tax\n                                    declarations in\n                                    Bulgaria.\n                                </b>\n                            </p>\n                        </section>\n                        <br/>\n                        <section>\n                            <header>\n                                <h4>\n                                    How does it work?\n                                </h4>\n                            </header>\n                        </section>\n                        <br/>\n                        <section id={\"etoro\"}>\n                            <header>\n                                <h4>\n                                    eToro\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                You need to export an Excel statement in the scope of the target year and maybe a month\n                                after (e.g. Jan 1,2020 - Jan 31, 2021). It's also fine if you break down the statements\n                                to several files. You should include January (next year) in your report if you want to\n                                get a list of the open positions you carried over.\n                            </p>\n                        </section>\n                        <section id={\"revolut\"}>\n                            <header>\n                                <h4>\n                                    Revolut\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                You should export statements for all months you want to include in the report. Again,\n                                make sure to attach next year's January to get carried over positions.\n                            </p>\n                            <br/>\n                        </section>\n                        <section id={\"requirements\"}>\n                            <header>\n                                <h4>\n                                    What's required?\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                There is no limit to the number of files you can attach and submit. Just make sure they\n                                are:\n                                <ul>\n                                    <li>no more than <strong>5 mb in total</strong></li>\n                                    <li>\n                                        in the correct format - <strong>PDF</strong> for Revolut\n                                        and <strong>XLSX/XLS</strong> for eToro\n                                    </li>\n                                    <li>the statements are from the target year</li>\n                                    <li>\n                                        the right files - any other files in the correct format will be accepted, but\n                                        they won't be red accurately and you will get inadequate results\n                                    </li>\n                                    <li>\n                                        please do not upload Revolut statements and eToro statements at the same time,\n                                        as these have different formats and require separate requests.\n                                    </li>\n                                </ul>\n                            </p>\n                            <br/>\n                        </section>\n                        <section id={\"submission\"}>\n                            <header>\n                                <h4>\n                                    How do I submit?\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                <ol>\n                                    <li>\n                                        Select target year (it is set to 2020 by default) and report type from the\n                                        dropdowns.\n                                    </li>\n                                    <li>\n                                        Browse and attach your statement files.\n                                    </li>\n                                    <li>\n                                        Enter your email and full names in the text fields - these are required as you\n                                        will get your report on your email. You may enter Gin Tonic in the name field if\n                                        you\n                                        like. We don't judge anybody on how they prefer to be called. Just make sure\n                                        that the\n                                        email is correct.\n                                    </li>\n                                    <li>\n                                        Input your coupon code. The coupon is personalized and you can request one by\n                                        contacting me.\n                                    </li>\n                                </ol>\n                                Once you fill everything needed hit the button at the end of the form and you will be\n                                redirected to a success/fail page with your request ID and coupon code.<br/>If all goes\n                                well you will receive an email with your report.\n                            </p>\n                            <br/>\n                        </section>\n                        <section id={\"personal-data\"}>\n                            <header>\n                                <h4>\n                                    What about the data I submit?\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                Personal data is kept for 48 hours and deleted afterwards.\n                            </p>\n                        </section>\n                        <br/>\n                        <section id={\"value\"}>\n                            <header>\n                                <h4>\n                                    What will I get after I submit my reports?\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                You will receive an email that features information that you can fill in <a\n                                href=\"https://nra.bg/document?id=19524\">annex 5</a> and <a\n                                href=\"https://nra.bg/document?id=19527\">annex 8</a> in your declarations. Тhe official\n                                European Central Bank USD/BGN exchange rates\n                                for the corresponding day and date of the transaction are taken into account.\n                            </p>\n                            <p>\n                                If the statements you provide are exhaustive enough, you will get:\n                                <ul>\n                                    <li>\n                                        a list of your open positions that were carried over from the previous year with\n                                        their:\n                                        <ul>\n                                            <li>average USD price (if you bought the stock several times before carrying\n                                                it\n                                                over)\n                                            </li>\n                                            <li>average BGN price</li>\n                                            <li>open date</li>\n                                            <li>total units</li>\n                                            <li>name and token of the stock in the position</li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        dividends:\n                                        <ul>\n                                            <li>gross amount received</li>\n                                            <li>net amount received</li>\n                                            <li>taxes - there are some things to consider like if the dividends are\n                                                already\n                                                taxed and by what amount, but if this is greater than 0 you'll have to\n                                                pay\n                                                it to the NRA\n                                            </li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        transactions summarization:\n                                        <ul>\n                                            <li>total buy amount</li>\n                                            <li>total sell amount</li>\n                                            <li>taxes - the amount to pay to the NRA. <strong>Note if that is less than\n                                                0,\n                                                then you owe nothing or you can use the amount to reverse the tax amount\n                                                of\n                                                some of your other report types. If you are а legal entity you can use\n                                                that sum to reverse taxes next year.</strong>\n                                            </li>\n                                        </ul>\n                                    </li>\n                                </ul>\n                            </p>\n                            <p><a href=\"#\" onClick={handleExampleModalShow}>Check the example report right now</a></p>\n                        </section>\n                    </FormText>\n                    <br/>\n                    <br/>\n                    <Form.Group id=\"buttons-container\">\n                        <ButtonGroup>\n                            <Button onClick={handleGoToSubmit}>Submit request</Button>\n                        </ButtonGroup>\n                    </Form.Group>\n                    <Modal size=\"xl\" show={showExampleModal}>\n                        <Modal.Header>\n                            <Modal.Title>Sample report</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <p>Hi Stranger,<br/>\n                                <br/>\n                                Here are the results of the tax calculations you requested with inquiry ID\n                                da761eca-da04-49fd-809c-5e719d63a0a2 (2020):<br/>\n                                <br/>\n                                ----------------------------------------<br/>\n                                Operations (BGN):<br/>\n                                ----------------------------------------<br/>\n                                Total sell amount: XXX XXX,XX<br/>\n                                Total buy amount: XXX XXX,XX<br/>\n                                Total tax: XXX,XX<br/>\n                                <br/>\n                                ----------------------------------------<br/>\n                                Dividends (BGN):<br/>\n                                ----------------------------------------<br/>\n                                Net amount: XXX,XX<br/>\n                                Gross amount: XXXX,XX<br/>\n                                Total tax: XXX,XX<br/>\n                                <br/>\n                                ----------------------------------------<br/>\n                                Transferred positions 2020 (XX):<br/>\n                                ----------------------------------------<br/>\n                                1 | Date: 11-11-2020 | Token: TSLA | Name: Tesla, Inc. | Avg price (USD): XXX,XX | Avg\n                                price (BGN): XXX,XX | Units: XX,XXX |<br/>\n                                ---------------------<br/>\n                                2 | Date: 19-11-2020 | Token: GME | Name: GameStop | Avg price (USD): XXX,XX | Avg\n                                price (BGN): XXX,XX | Units: XX,XXX |<br/>\n                                ---------------------<br/>\n                                3 | Date: 20-11-2020 | Token: FVRR | Name: Fiverr | Avg price (USD): XXX,XX | Avg\n                                price (BGN): XXX,XX | Units: XXX,XXX |<br/>\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <ButtonGroup>\n                                <Button variant=\"secondary\" onClick={handleExampleModalClose}>Close</Button>\n                            </ButtonGroup>\n                        </Modal.Footer>\n                    </Modal>\n                </Form>\n            </Container>\n        </>\n    )\n}\n\nexport default Instructions;","import './Terms.css'\nimport {Container, Form, FormText} from \"react-bootstrap\";\n\nfunction Terms() {\n\n    return (\n        <Container id=\"instructions-container\">\n            <Form>\n                <FormText>\n                    <h2>Terms and Conditions</h2>\n                    <p>Last updated: February 10, 2021</p>\n                    <p>Please read these terms and conditions carefully before using Our Service.</p>\n                    <h2>Interpretation and Definitions</h2>\n                    <h3>Interpretation</h3>\n                    <p>The words of which the initial letter is capitalized have meanings defined under the following\n                        conditions. The following definitions shall have the same meaning regardless of whether they\n                        appear in\n                        singular or in plural.</p>\n                    <h4>Definitions</h4>\n                    <p>For the purposes of these Terms and Conditions:</p>\n                    <ul>\n                        <li>\n                            <p><strong>Affiliate</strong> means an entity that controls, is controlled by or is under\n                                common\n                                control with a party, where &quot;control&quot; means ownership of 50% or more of the\n                                shares,\n                                equity interest or other securities entitled to vote for election of directors or other\n                                managing\n                                authority.</p>\n                        </li>\n                        <li>\n                            <p><strong>Country</strong> refers to: Bulgaria</p>\n                        </li>\n                        <li>\n                            <p><strong>Company</strong> (referred to as either &quot;the\n                                Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement)\n                                refers to\n                                Tax calculator.</p>\n                        </li>\n                        <li>\n                            <p><strong>Device</strong> means any device that can access the Service such as a computer,\n                                a\n                                cellphone or a digital tablet.</p>\n                        </li>\n                        <li>\n                            <p><strong>Service</strong> refers to the Website.</p>\n                        </li>\n                        <li>\n                            <p><strong>Terms and Conditions</strong> (also referred as &quot;Terms&quot;) mean these\n                                Terms and\n                                Conditions that form the entire agreement between You and the Company regarding the use\n                                of the\n                                Service. </p>\n                        </li>\n                        <li>\n                            <p><strong>Third-party Social Media Service</strong> means any services or content\n                                (including data,\n                                information, products or services) provided by a third-party that may be displayed,\n                                included or\n                                made available by the Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>Website</strong> refers to Tax calculator, accessible from <a\n                                href=\"https://taxes.digitools-it.com\" rel=\"external nofollow noopener\"\n                                target=\"_blank\">https://taxes.digitools-it.com</a></p>\n                        </li>\n                        <li>\n                            <p><strong>You</strong> means the individual accessing or using the Service, or the company,\n                                or\n                                other legal entity on behalf of which such individual is accessing or using the Service,\n                                as\n                                applicable.</p>\n                        </li>\n                    </ul>\n                    <h2>Acknowledgment</h2>\n                    <p>These are the Terms and Conditions governing the use of this Service and the agreement that\n                        operates\n                        between You and the Company. These Terms and Conditions set out the rights and obligations of\n                        all users\n                        regarding the use of the Service.</p>\n                    <p>Your access to and use of the Service is conditioned on Your acceptance of and compliance with\n                        these\n                        Terms and Conditions. These Terms and Conditions apply to all visitors, users and others who\n                        access or\n                        use the Service.</p>\n                    <p>By accessing or using the Service You agree to be bound by these Terms and Conditions. If You\n                        disagree\n                        with any part of these Terms and Conditions then You may not access the Service.</p>\n                    <p>You represent that you are over the age of 18. The Company does not permit those under 18 to use\n                        the\n                        Service.</p>\n                    <p>Your access to and use of the Service is also conditioned on Your acceptance of and compliance\n                        with the\n                        Privacy Policy of the Company. Our Privacy Policy describes Our policies and procedures on the\n                        collection, use and disclosure of Your personal information when You use the Application or the\n                        Website\n                        and tells You about Your privacy rights and how the law protects You. Please read Our Privacy\n                        Policy\n                        carefully before using Our Service.</p>\n                    <h2>Links to Other Websites</h2>\n                    <p>Our Service may contain links to third-party web sites or services that are not owned or\n                        controlled by\n                        the Company.</p>\n                    <p>The Company has no control over, and assumes no responsibility for, the content, privacy\n                        policies, or\n                        practices of any third party web sites or services. You further acknowledge and agree that the\n                        Company\n                        shall not be responsible or liable, directly or indirectly, for any damage or loss caused or\n                        alleged to\n                        be caused by or in connection with the use of or reliance on any such content, goods or services\n                        available on or through any such web sites or services.</p>\n                    <p>We strongly advise You to read the terms and conditions and privacy policies of any third-party\n                        web sites\n                        or services that You visit.</p>\n                    <h2>Termination</h2>\n                    <p>We may terminate or suspend Your access immediately, without prior notice or liability, for any\n                        reason\n                        whatsoever, including without limitation if You breach these Terms and Conditions.</p>\n                    <p>Upon termination, Your right to use the Service will cease immediately.</p>\n                    <h2>Limitation of Liability</h2>\n                    <p>Notwithstanding any damages that You might incur, the entire liability of the Company and any of\n                        its\n                        suppliers under any provision of this Terms and Your exclusive remedy for all of the foregoing\n                        shall be\n                        limited to the amount actually paid by You through the Service.</p>\n                    <p>To the maximum extent permitted by applicable law, in no event shall the Company or its suppliers\n                        be\n                        liable for any special, incidental, indirect, or consequential damages whatsoever (including,\n                        but not\n                        limited to, damages for loss of profits, loss of data or other information, for business\n                        interruption,\n                        for personal injury, loss of privacy arising out of or in any way related to the use of or\n                        inability to\n                        use the Service, third-party software and/or third-party hardware used with the Service, or\n                        otherwise in\n                        connection with any provision of this Terms), even if the Company or any supplier has been\n                        advised of\n                        the possibility of such damages and even if the remedy fails of its essential purpose.</p>\n                    <h2>&quot;AS IS&quot; and &quot;AS AVAILABLE&quot; Disclaimer</h2>\n                    <p>The Service is provided to You &quot;AS IS&quot; and &quot;AS AVAILABLE&quot; and with all faults\n                        and\n                        defects without warranty of any kind. To the maximum extent permitted under applicable law, the\n                        Company,\n                        on its own behalf and on behalf of its Affiliates and its and their respective licensors and\n                        service\n                        providers, expressly disclaims all warranties, whether express, implied, statutory or otherwise,\n                        with\n                        respect to the Service, including all implied warranties of merchantability, fitness for a\n                        particular\n                        purpose, title and non-infringement, and warranties that may arise out of course of dealing,\n                        course of\n                        performance, usage or trade practice. Without limitation to the foregoing, the Company provides\n                        no\n                        warranty or undertaking, and makes no representation of any kind that the Service will meet Your\n                        requirements, achieve any intended results, be compatible or work with any other software,\n                        applications,\n                        systems or services, operate without interruption, meet any performance or reliability standards\n                        or be\n                        error free or that any errors or defects can or will be corrected.</p>\n                    <p>Without limiting the foregoing, neither the Company nor any of the company's provider makes any\n                        representation or warranty of any kind, express or implied: (i) as to the operation or\n                        availability of\n                        the Service, or the information, content, and materials or products included thereon; (ii) that\n                        the\n                        Service will be uninterrupted or error-free; (iii) as to the accuracy, reliability, or currency\n                        of any\n                        information or content provided through the Service; or (iv) that the Service, its servers, the\n                        content,\n                        or e-mails sent from or on behalf of the Company are free of viruses, scripts, trojan horses,\n                        worms,\n                        malware, timebombs or other harmful components.</p>\n                    <p>Some jurisdictions do not allow the exclusion of certain types of warranties or limitations on\n                        applicable\n                        statutory rights of a consumer, so some or all of the above exclusions and limitations may not\n                        apply to\n                        You. But in such a case the exclusions and limitations set forth in this section shall be\n                        applied to the\n                        greatest extent enforceable under applicable law.</p>\n                    <h2>Governing Law</h2>\n                    <p>The laws of the Country, excluding its conflicts of law rules, shall govern this Terms and Your\n                        use of\n                        the Service. Your use of the Application may also be subject to other local, state, national, or\n                        international laws.</p>\n                    <h2>Disputes Resolution</h2>\n                    <p>If You have any concern or dispute about the Service, You agree to first try to resolve the\n                        dispute\n                        informally by contacting the Company.</p>\n                    <h2>For European Union (EU) Users</h2>\n                    <p>If You are a European Union consumer, you will benefit from any mandatory provisions of the law\n                        of the\n                        country in which you are resident in.</p>\n                    <h2>United States Legal Compliance</h2>\n                    <p>You represent and warrant that (i) You are not located in a country that is subject to the United\n                        States\n                        government embargo, or that has been designated by the United States government as\n                        a &quot;terrorist\n                        supporting&quot; country, and (ii) You are not listed on any United States government list of\n                        prohibited\n                        or restricted parties.</p>\n                    <h2>Severability and Waiver</h2>\n                    <h3>Severability</h3>\n                    <p>If any provision of these Terms is held to be unenforceable or invalid, such provision will be\n                        changed\n                        and interpreted to accomplish the objectives of such provision to the greatest extent possible\n                        under\n                        applicable law and the remaining provisions will continue in full force and effect.</p>\n                    <h3>Waiver</h3>\n                    <p>Except as provided herein, the failure to exercise a right or to require performance of an\n                        obligation\n                        under this Terms shall not effect a party's ability to exercise such right or require such\n                        performance\n                        at any time thereafter nor shall be the waiver of a breach constitute a waiver of any subsequent\n                        breach.</p>\n                    <h2>Translation Interpretation</h2>\n                    <p>These Terms and Conditions may have been translated if We have made them available to You on our\n                        Service.\n                        You agree that the original English text shall prevail in the case of a dispute.</p>\n                    <h2>Changes to These Terms and Conditions</h2>\n                    <p>We reserve the right, at Our sole discretion, to modify or replace these Terms at any time. If a\n                        revision\n                        is material We will make reasonable efforts to provide at least 30 days' notice prior to any new\n                        terms\n                        taking effect. What constitutes a material change will be determined at Our sole discretion.</p>\n                    <p>By continuing to access or use Our Service after those revisions become effective, You agree to\n                        be bound\n                        by the revised terms. If You do not agree to the new terms, in whole or in part, please stop\n                        using the\n                        website and the Service.</p>\n                    <h2>Contact Us</h2>\n                    <p>If you have any questions about these Terms and Conditions, You can contact us:</p>\n                    <ul>\n                        <li>By email: nikolov@digitools-it.com</li>\n                    </ul>\n                </FormText>\n            </Form>\n        </Container>\n    )\n}\n\nexport default Terms;","import {Container, Form, FormText,} from \"react-bootstrap\";\nimport './AboutMe.css'\n\nfunction AboutMe() {\n\n    return (\n        <>\n            <Container id=\"instructions-container\">\n                <Form>\n                    <FormText>\n                        <section id={\"motivation\"}>\n                            <header>\n                                <h4>\n                                    About me\n                                </h4>\n                            </header>\n                            <br/>\n                            <p>\n                                Hey there, I'm a Bulgarian individual and software developer who trades US financial\n                                instruments (to be precise - real stocks as well as CFDs) on a daily basis.\n                            </p>\n                            <p>\n                                I have\n                                reached out to Bulgarian accountants because I wanted someone else to fill in my\n                                Bulgarian tax declaration on behalf of me. It came out they either do not want to take\n                                care of day traders or of hundreds, sometimes even thousands of transactions, for a\n                                reasonable price. So, I decided to create an app that collects the required information\n                                and prepares the calculations that I needed to fill in my Bulgarian tax declaration.\n                            </p>\n                            <p>\n                                You can reach me out at <a\n                                href={`mailto:${process.env.REACT_APP_CONTACT_EMAIL}`}>{process.env.REACT_APP_CONTACT_EMAIL}</a>\n                            </p>\n                        </section>\n                    </FormText>\n                </Form>\n            </Container>\n        </>\n    )\n}\n\nexport default AboutMe;","import {Form} from \"react-bootstrap\";\nimport * as React from \"react\";\n\nfunction RequiredLabel({label}) {\n    return (\n        <Form.Label className={\"text-start\"}>\n            {label}<span className={\"text-danger\"}>*</span>\n        </Form.Label>\n    )\n}\n\nexport default RequiredLabel;","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {validate as uuidValidate} from 'uuid';\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    DropdownButton,\n    Form,\n    FormCheck,\n    FormText,\n    Modal,\n    Row,\n    Spinner\n} from \"react-bootstrap\";\nimport './Uplaod.css'\nimport axios from \"axios\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport RequiredLabel from \"../RequiredLabel\";\n\nfunction UploadFree() {\n    const history = useHistory();\n\n    const defaultFormFileTitle = 'nothing selected';\n\n    const [year, setYear] = useState('2020')\n    const [type, setType] = useState('')\n    const [email, setEmail] = useState('')\n    const [files, setFiles] = useState([])\n    const [validEmail, setValidEmail] = useState(false)\n    const [submitted, setSubmitted] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [coupon, setCoupon] = useState(\"\")\n    const [isValidCoupon, setIfIsValidCoupon] = useState(false)\n    const [agreedWithTerms, setAgreedWithTerms] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSelectYear = (e) => {\n        setYear(e)\n    }\n\n    const handleSelectType = (e) => {\n        setType(e)\n    }\n\n    const handleSelectedFiles = (e) => {\n        const fNames = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            fNames.push(e.target.files[i].name)\n        }\n        setFiles(fNames)\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n        const pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\n        if (e.target.value != null) {\n            setValidEmail(pattern.test(e.target.value.toLowerCase()))\n        }\n    }\n\n    const getFileControlTitle = () => {\n        if (files.length === 0) {\n            return defaultFormFileTitle;\n        }\n\n        if (files.length === 1) {\n            return \"1 file selected\";\n        } else {\n            return files.length + \" files selected\";\n        }\n    }\n\n    const canSubmit = () => {\n        return year !== '' && type !== '' && files.length > 0 && validEmail && isValidCoupon && agreedWithTerms\n    }\n\n    const handleCouponChange = (e) => {\n        if (coupon.length + (e.target.value.length - coupon.length) > 36) {\n            return\n        }\n        if (uuidValidate(e.target.value)) {\n            setIfIsValidCoupon(true)\n        } else {\n            setIfIsValidCoupon(false)\n        }\n        setCoupon(e.target.value)\n        setErrorMessage('')\n    }\n\n    const handleSubmit = async () => {\n        if (submitted) {\n            return\n        }\n\n        if (!agreedWithTerms) {\n            setErrorMessage('You should read and agree to the terms and conditions first')\n            return\n        }\n\n        setErrorMessage('')\n        setSubmitted(true)\n        setShowModal(true)\n        const formData = new FormData();\n        const statements = document.querySelector('#statements');\n        for (let i = 0; i < statements.files.length; i++) {\n            formData.append('statements', statements.files[i])\n        }\n\n        formData.append('type', type)\n        formData.append('year', year)\n        formData.append('email', email)\n        formData.append('coupon', coupon)\n\n        try {\n            const baseUrl = process.env.REACT_APP_API_BASE_URL;\n            const uploadResponse = await axios.post(`${baseUrl}/api/statements/upload`, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                    \"X-API-KEY\": btoa(process.env.REACT_APP_CLIENT_TOKEN)\n                }\n            })\n            const requestId = uploadResponse.data.request_id;\n            history.push(`/checkout?success=true&coupon=${coupon}&request_id=${requestId}`)\n        } catch (err) {\n            if (err.response && err.response.data && err.response.data.description) {\n                setErrorMessage(err.response.data.description)\n                return;\n            }\n            history.push(`/checkout?success=false`)\n        } finally {\n            setSubmitted(false)\n            setShowModal(false)\n        }\n    }\n\n    const handleInstructions = (e) => {\n        e.preventDefault()\n        history.push(\"/faq\")\n    }\n\n    const handleTerms = (e) => {\n        e.preventDefault()\n        history.push(\"/terms-of-use\")\n    }\n\n    return (\n        <Container fluid id=\"upload-container\">\n            <Row className=\"justify-content-sm-center\">\n                <Col sm={15}>\n                    <Form>\n                        <FormText>Make sure you read the <Link to={\"\"}\n                                                               onClick={handleInstructions}>FAQ</Link> first</FormText>\n                        <br/>\n                        <Form.Group className={\"text-center\"}>\n                            <FormText><h4>Submit new request</h4></FormText>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadYear\" id='form-group-year-dd'>\n                            <RequiredLabel label={\"Select year\"}/>\n                            <Dropdown>\n                                <DropdownButton title={year !== '' ? year : 'select'} variant=\"outline-dark\"\n                                                id=\"dropdown-year\"\n                                                onSelect={handleSelectYear}>\n                                    <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                                </DropdownButton>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadType\">\n                            <RequiredLabel label={\"Select type\"}/>\n                            <Dropdown>\n                                <DropdownButton title={type !== '' ? type : 'select'}\n                                                variant=\"outline-dark\" id=\"dropdown-type\"\n                                                onSelect={handleSelectType}>\n                                    <Dropdown.Item eventKey=\"revolut\">revolut</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"etoro\">etoro</Dropdown.Item>\n                                </DropdownButton>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadStatements\">\n                            <RequiredLabel label={\"Upload\"}/>\n                            <Form.File onChange={handleSelectedFiles}\n                                       label={getFileControlTitle()}\n                                       id='statements'\n                                       type=\"file\" name=\"statements\" multiple custom/>\n                            {files.length === 0\n                                ? <Form.Text muted>\n                                    Tax calculations will be applied on selected files for {year}\n                                </Form.Text>\n                                : files.map((fName, i) =>\n                                    <Form.Text key={i} muted>\n                                        {fName}\n                                    </Form.Text>)\n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\" id='form-group-email-id'>\n                            <RequiredLabel label={\"Email\"}/>\n                            <Form.Control type=\"input\" placeholder=\"example@domain.com\"\n                                          onChange={handleEmailChange}/>\n                            <Form.Text muted>\n                                You will receive your report on the provided email\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formCoupon\" id='form-group-coupon'>\n                            <RequiredLabel label={\"Coupon\"}/>\n                            <Form.Control type=\"input\" placeholder=\"Enter coupon\"\n                                          value={coupon}\n                                          onChange={handleCouponChange}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formSubmitButton\" id='form-group-submit-btn-id'>\n                            <>\n                                <FormText muted>\n                                    <div id=\"terms-container\">\n                                        <Row className=\"justify-content-xs-start\">\n                                            <Col xs={3}><FormCheck id=\"terms\"\n                                                                   onClick={(e) => setAgreedWithTerms(!agreedWithTerms)}/>\n                                            </Col>\n                                            <Col xs={9} style={{\"paddingLeft\": 0}}\n                                                 className={\"justify-content-xs-start\"}>\n                                                <label htmlFor={\"terms\"}>I have read and agreed with the &nbsp;\n                                                    <Link to=\"\" onClick={handleTerms}>terms and conditions</Link>\n                                                </label>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </FormText>\n                                {\n                                    <Button title=\"submit\" variant=\"success\"\n                                            disabled={!canSubmit()}\n                                            onClick={handleSubmit}\n                                            block>\n                                        Submit\n                                    </Button>\n                                }\n                            </>\n                            <FormText className=\"text-danger\">{errorMessage}</FormText>\n                        </Form.Group>\n                    </Form>\n                </Col>\n            </Row>\n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={showModal}\n            >\n                <Modal.Header>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Processing request &nbsp;\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </Modal.Title>\n                </Modal.Header>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default UploadFree;","import './App.css';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Checkout from \"./components/checkout/Checkout\";\nimport {LinkContainer} from 'react-router-bootstrap'\nimport Instructions from \"./components/instructions/Instructions\";\nimport Terms from \"./components/terms/Terms\";\nimport AboutMe from \"./components/about/AboutMe\";\nimport UploadFree from \"./components/upload/UploadFree\";\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_SECRET);\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <LinkContainer to={\"/\"}>\n                                <Nav.Link href=\"\">Submit statements</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/faq\"}>\n                                <Nav.Link href=\"\">FAQ</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/about-me\"}>\n                                <Nav.Link href=\"\">About me</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/terms-of-use\"}>\n                                <Nav.Link href=\"\">Terms of use</Nav.Link>\n                            </LinkContainer>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n\n                <Switch>\n                    <Route path=\"/\" exact>\n                        {/*<Elements stripe={stripePromise}>*/}\n                        <UploadFree/>\n                        {/*</Elements>*/}\n                    </Route>\n                    <Route path=\"/checkout\">\n                        <Checkout/>\n                    </Route>\n                    <Route path=\"/faq\">\n                        <Instructions/>\n                    </Route>\n                    <Route path=\"/terms-of-use\">\n                        <Terms/>\n                    </Route>\n                    <Route path=\"/about-me\">\n                        <AboutMe/>\n                    </Route>\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}