{"version":3,"sources":["components/upload/stripe_logo.svg","components/upload/Upload.js","components/checkout/Success.js","components/checkout/Fail.js","components/checkout/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","stripePromise","history","useHistory","useState","year","setYear","type","setType","email","setEmail","files","setFiles","fullName","setFullName","validEmail","setValidEmail","submitted","setSubmitted","showModal","setShowModal","coupon","setCoupon","isValidCoupon","setIfIsValidCoupon","errorMessage","setErrorMessage","canSubmit","length","handleSubmit","a","formData","FormData","statements","document","querySelector","i","append","stripe","baseUrl","process","axios","post","headers","uploadResponse","requestId","data","request_id","checkoutResponse","sessionID","id","redirectToCheckout","sessionId","error","push","response","description","Container","fluid","Row","Col","md","Form","Group","FormText","className","controlId","Dropdown","DropdownButton","title","variant","onSelect","e","Item","eventKey","Text","File","onChange","fNames","target","name","label","multiple","custom","muted","map","fName","Control","placeholder","autoComplete","value","console","log","pattern","RegExp","test","toLowerCase","uuidValidate","Button","onClick","block","style","color","backgroundColor","cursor","Image","src","logo","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","Modal","size","aria-labelledby","centered","Header","Title","Spinner","animation","role","SuccessCheckout","props","state","showCopyRequestTooltip","showCopyCouponTooltip","contactMail","handleRequestIDCopyClick","setState","setTimeout","handleCouponCopyClick","this","then","res","catch","err","InputGroup","FormControl","disabled","Append","text","React","Component","SuccessCheckoutWithRouter","withRouter","FailCheckout","setShowReqCopyTooltip","trim","href","Checkout","query","URLSearchParams","useLocation","search","ri","get","success","Success","Fail","loadStripe","App","Navbar","bg","Nav","to","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b441488b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stripe_logo.1fd88ea7.svg\";","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {validate as uuidValidate} from 'uuid';\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    DropdownButton,\n    Form,\n    FormText,\n    Image,\n    Modal,\n    OverlayTrigger,\n    Row,\n    Spinner,\n    Tooltip\n} from \"react-bootstrap\";\nimport './Uplaod.css'\nimport logo from './stripe_logo.svg'\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction Upload({stripePromise}) {\n    const history = useHistory();\n\n    const defaultFormFileTitle = 'Select statements';\n\n    const [year, setYear] = useState('2020')\n    const [type, setType] = useState('')\n    const [email, setEmail] = useState('')\n    const [files, setFiles] = useState([])\n    const [fullName, setFullName] = useState('')\n    const [validEmail, setValidEmail] = useState(false)\n    const [submitted, setSubmitted] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [coupon, setCoupon] = useState(\"\")\n    const [isValidCoupon, setIfIsValidCoupon] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSelectYear = (e) => {\n        setYear(e)\n    }\n\n    const handleSelectType = (e) => {\n        setType(e)\n    }\n\n    const handleSelectedFiles = (e) => {\n        const fNames = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            fNames.push(e.target.files[i].name)\n        }\n        setFiles(fNames)\n    }\n\n    const handleEmailChange = (e) => {\n        console.log(process.env.REACT_APP_STRIPE_SECRET)\n        setEmail(e.target.value)\n        //const pattern = new RegExp(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/i);\n        const pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\n        setValidEmail(pattern.test(email.toLowerCase()))\n    }\n\n    const handleFullNameChange = (e) => {\n        setFullName(e.target.value)\n    }\n\n    const getFileControlTitle = () => {\n        if (files.length === 0) {\n            return defaultFormFileTitle;\n        }\n\n        if (files.length === 1) {\n            return \"1 file selected\";\n        } else {\n            return files.length + \" files selected\";\n        }\n    }\n\n    const canSubmit = () => {\n        return year !== '' && type !== '' && files.length > 0 && validEmail && fullName !== ''\n    }\n\n    const handleCouponChange = (e) => {\n        if (coupon.length + (e.target.value.length - coupon.length) > 36) {\n            return\n        }\n        if (uuidValidate(e.target.value)) {\n            setIfIsValidCoupon(true)\n        } else {\n            setIfIsValidCoupon(false)\n        }\n        setCoupon(e.target.value)\n        setErrorMessage('')\n    }\n\n    const handleSubmit = async () => {\n        if (submitted) {\n            return\n        }\n\n        setErrorMessage('')\n        setSubmitted(true)\n        setShowModal(true)\n        const formData = new FormData();\n        const statements = document.querySelector('#statements');\n        for (let i = 0; i < statements.files.length; i++) {\n            formData.append('statements', statements.files[i])\n        }\n\n        formData.append('type', type)\n        formData.append('year', year)\n        formData.append('email', email)\n        formData.append('fullName', fullName)\n        formData.append('coupon', coupon)\n\n        try {\n            const stripe = await stripePromise\n\n            const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\n            const uploadResponse = await axios.post(`${baseUrl}/api/statements/upload`, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            const requestId = uploadResponse.data.request_id;\n\n            if (!isValidCoupon) {\n                const checkoutResponse = await axios.post(`${baseUrl}/api/payments/create-checkout-session`,\n                    {\n                        \"request_id\": requestId,\n                    })\n                const sessionID = checkoutResponse.data.id\n                const result = await stripe.redirectToCheckout({\n                    sessionId: sessionID,\n                });\n\n                if (result.error) {\n                    history.push(\"/checkout?success=false&request_id=\" + requestId)\n                }\n            } else {\n                history.push(`/checkout?success=true&coupon=${coupon}&request_id=${requestId}`)\n            }\n        } catch (err) {\n            if (err.response && err.response.data && err.response.data.description) {\n                setErrorMessage(err.response.data.description)\n                return;\n            }\n            history.push(`/checkout?success=false`)\n        } finally {\n            setSubmitted(false)\n            setShowModal(false)\n        }\n    }\n\n    return (\n        <Container fluid id=\"upload-container\">\n            <Row>\n                <Col/>\n                <Col md={15}>\n                    <Form>\n                        <Form.Group>\n                            <FormText className=\"text-center\"><h4>Submit statements</h4></FormText>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadYear\" id='form-group-year-dd'>\n                            <Dropdown>\n                                <DropdownButton title=\"Select year\" variant=\"outline-dark\" id=\"dropdown-year\"\n                                                onSelect={handleSelectYear}>\n                                    <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{year}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadType\">\n                            <Dropdown>\n                                <DropdownButton title=\"Select type\"\n                                                variant=\"outline-dark\" id=\"dropdown-type\"\n                                                onSelect={handleSelectType}>\n                                    <Dropdown.Item eventKey=\"revolut\">revolut</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"etoro\">etoro</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{type}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadStatements\">\n                            <Form.File onChange={handleSelectedFiles}\n                                       label={getFileControlTitle()}\n                                       id='statements'\n                                       className=\"text-center\"\n                                       type=\"file\" name=\"statements\" multiple custom/>\n                            {files.length === 0\n                                ? <Form.Text muted>\n                                    Tax calculations will be applied on selected files\n                                </Form.Text>\n                                : files.map((fName, i) =>\n                                    <Form.Text key={i} muted>\n                                        {fName}\n                                    </Form.Text>)\n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"formFullName\" id='form-group-full-name'>\n                            <Form.Control type=\"input\" className=\"text-center\" placeholder=\"Your full name\"\n                                          autoComplete=\"off\"\n                                          onChange={handleFullNameChange}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\" id='form-group-email-id'>\n                            <Form.Control type=\"email\" className=\"text-center\" placeholder=\"Your email\"\n                                          autoComplete=\"off\"\n                                          onChange={handleEmailChange}/>\n                            <Form.Text muted>\n                                You will receive your report on the provided email\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formCoupon\" id='form-group-coupon'>\n                            <Form.Control type=\"input\" className=\"text-center\" placeholder=\"Coupon\"\n                                          value={coupon}\n                                          autoComplete=\"off\"\n                                          onChange={handleCouponChange}/>\n                            <Form.Text muted>\n                                Coupon field is optional. You will skip payments is you provide it and if it's a valid\n                                code.\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formSubmitButton\" id='form-group-submit-btn-id'>\n                            {\n                                canSubmit() && isValidCoupon ?\n                                    <Button title=\"submit\" variant=\"success\"\n                                            onClick={handleSubmit}\n                                            block>\n                                        Submit\n                                    </Button> :\n                                    (!canSubmit() ?\n                                            <OverlayTrigger\n                                                placement=\"bottom\"\n                                                delay={{show: 250, hide: 400}}\n                                                overlay={\n                                                    <Tooltip>\n                                                        Select statements, type and input your name and email to submit\n                                                    </Tooltip>\n                                                }>\n                                                <Button title=\"submit\"\n                                                        className=\"btn-outline-dark\"\n                                                        style={{\n                                                            color: \"#FFF\",\n                                                            backgroundColor: \"#5433FF\"\n                                                        }}>\n                                                    Submit and checkout with\n                                                    <Image className='align-content-end' src={logo}/>\n                                                </Button>\n                                            </OverlayTrigger> :\n                                            <Button title=\"submit\"\n                                                    className=\"btn-outline-dark\"\n                                                    onClick={handleSubmit}\n                                                    style={{\n                                                        color: \"#FFF\",\n                                                        backgroundColor: \"#5433FF\",\n                                                        cursor: \"pointer\"\n                                                    }}>\n                                                Submit and checkout with\n                                                <Image className='align-content-end' src={logo}/>\n                                            </Button>\n                                    )\n                            }\n                            <FormText className=\"text-danger\">{errorMessage}</FormText>\n\n                        </Form.Group>\n                    </Form>\n                </Col>\n                <Col/>\n            </Row>\n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={showModal}\n            >\n                <Modal.Header>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Processing request &nbsp;\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </Modal.Title>\n                </Modal.Header>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default Upload;","import {Button, Form, FormControl, FormText, InputGroup, OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport {withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport axios from \"axios\";\n\nclass SuccessCheckout extends React.Component {\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    };\n\n    requestId = this.props.requestId\n    state = {\n        showCopyRequestTooltip: false,\n        showCopyCouponTooltip: false,\n        coupon: \"\"\n    }\n\n    contactMail = process.env.REACT_APP_CONTACT_EMAIL;\n\n    componentDidMount() {\n        const baseUrl = process.env.REACT_APP_API_BASE_URL;\n        axios.post(`${baseUrl}/api/payments/obtain-coupon`,\n            {\n                \"request_id\": this.requestId,\n            })\n            .then(res => {\n                const coupon = res.data.coupon\n                this.setState({...this.state, coupon})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleRequestIDCopyClick = () => {\n        this.setState({...this.state, showCopyRequestTooltip: true})\n        setTimeout(() =>\n            this.setState({...this.state, showCopyRequestTooltip: false}), 500\n        )\n    }\n\n    handleCouponCopyClick = () => {\n        this.setState({...this.state, showCopyCouponTooltip: true})\n        setTimeout(() =>\n            this.setState({...this.state, showCopyCouponTooltip: false}), 500\n        )\n    }\n\n    render() {\n        const {history} = this.props;\n        return (\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\">\n                        <h4>Your request was processed successfully and a report is on its way to your mailbox</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.requestId}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <OverlayTrigger\n                                placement={\"bottom\"}\n                                show={this.state.showCopyRequestTooltip}\n                                overlay={<Tooltip id=\"tooltip-disabled\">Copied</Tooltip>}>\n                            <span className=\"d-inline-block\">\n                                <CopyToClipboard text={this.requestId}>\n                                    <Button variant={\"outline-info\"}\n                                            onClick={this.handleRequestIDCopyClick}>Copy</Button>\n                                </CopyToClipboard>\n                            </span>\n                            </OverlayTrigger>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n                    <FormText muted>\n                        Request ID\n                    </FormText>\n                </Form.Group>\n\n                <Form.Group>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.state.coupon}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <OverlayTrigger\n                                placement={\"bottom\"}\n                                show={this.state.showCopyCouponTooltip}\n                                overlay={<Tooltip id=\"tooltip-disabled\">Copied</Tooltip>}>\n                            <span className=\"d-inline-block\">\n                                <CopyToClipboard text={this.state.coupon}>\n                                    <Button variant={\"outline-info\"}\n                                            onClick={this.handleCouponCopyClick}>Copy</Button>\n                                </CopyToClipboard>\n                            </span>\n                            </OverlayTrigger>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n                    <FormText muted>\n                        Coupon code\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n            </Form>\n        )\n    }\n}\n\nconst\n    SuccessCheckoutWithRouter = withRouter(SuccessCheckout);\n\nexport default SuccessCheckoutWithRouter;","import {Button, Form, FormControl, FormText, InputGroup, OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport {useState} from \"react\";\nimport {useHistory} from 'react-router-dom';\n\nfunction FailCheckout({requestId}) {\n    const history = useHistory();\n\n    let [showCopyRequestTooltip, setShowReqCopyTooltip] = useState(false)\n    const contactMail = process.env.REACT_APP_CONTACT_EMAIL;\n\n    const handleRequestIDCopyClick = () => {\n        setShowReqCopyTooltip(true)\n        setTimeout(() =>\n            setShowReqCopyTooltip(false), 500\n        )\n    }\n    return (\n        <Form>\n            {\n                requestId != null && requestId.trim(\" \") !== \"\" ?\n                    <>\n                        <Form.Group>\n                            <FormText className=\"text-center\"><h4>Unfortunately, we could not process your payment</h4>\n                            </FormText>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group>\n                            <InputGroup className=\"mb-2\">\n                                <FormControl\n                                    value={requestId}\n                                    disabled\n                                    className=\"text-center\"\n                                    placeholder=\"\"\n                                />\n                                <InputGroup.Append>\n                                    <OverlayTrigger\n                                        placement={\"bottom\"}\n                                        show={showCopyRequestTooltip}\n                                        overlay={<Tooltip id=\"tooltip-disabled\">Copied</Tooltip>}>\n                            <span className=\"d-inline-block\">\n                                <CopyToClipboard text={requestId}>\n                                    <Button variant={\"outline-info\"} onClick={handleRequestIDCopyClick}>Copy</Button>\n                                </CopyToClipboard>\n                            </span>\n                                    </OverlayTrigger>\n                                </InputGroup.Append>\n                            </InputGroup>\n                            <p>\n                                Above is your request ID. Please try submitting another request or send this to <a\n                                href={\"mailto:\" + contactMail}\n                                className={\"border-bottom\"}>{contactMail}</a> and ask for details\n                            </p>\n                        </Form.Group>\n                    </> :\n                    <>\n                        <Form.Group>\n                            <FormText className=\"text-center\"><h4>Your request failed</h4>\n                            </FormText>\n                        </Form.Group>\n                        <br/>\n                        <Form.Group>\n                            <p>\n                                You were not charged for this operation. If this happened more than once please\n                                contact <a\n                                href={\"mailto:\" + contactMail}\n                                className={\"border-bottom\"}>{contactMail}</a> for more details.\n                                Sorry for the inconvenience.\n                            </p>\n                        </Form.Group>\n                    </>\n            }\n            <br/>\n            <br/>\n            <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n\n        </Form>\n    )\n}\n\nexport default FailCheckout;","import {useLocation} from \"react-router-dom\";\nimport SuccessCheckoutWithRouter from \"./Success\";\nimport FailCheckout from \"./Fail\";\nimport './Checkout.css'\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Checkout() {\n    let query = useQuery()\n    let ri = query.get(\"request_id\")\n    let success = query.get(\"success\")\n\n    return (\n        <Container fluid id=\"checkout-container\">\n            <Row>\n                <Col/>\n                <Col md={15}>\n                    {\n                        success === \"true\" ?\n                            <SuccessCheckoutWithRouter requestId={ri}/> :\n                            <FailCheckout requestId={ri}/>\n                    }\n                </Col>\n                <Col/>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Checkout;","import './App.css';\nimport Upload from \"./components/upload/Upload\";\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\nimport {Elements} from \"@stripe/react-stripe-js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Checkout from \"./components/checkout/Checkout\";\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_SECRET);\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Nav className=\"mr-auto\">\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link href=\"\">Submit statements</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link href=\"\">Instructions</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to={\"/checkout\"}>\n                            <Nav.Link href=\"\">Pricing</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar>\n\n                <Switch>\n                    <Container>\n                        <Route path=\"/\" exact>\n                            <Elements stripe={stripePromise}>\n                                <Upload stripePromise={stripePromise}/>\n                            </Elements>\n                        </Route>\n                        <Route path=\"/checkout\">\n                            <Checkout/>\n                        </Route>\n                    </Container>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}