{"version":3,"sources":["components/upload/stripe_logo.svg","components/upload/Upload.js","components/checkout/Success.js","components/checkout/Fail.js","components/checkout/Checkout.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","stripePromise","history","useHistory","useState","year","setYear","type","setType","email","setEmail","files","setFiles","fullName","setFullName","validEmail","setValidEmail","submitted","setSubmitted","showModal","setShowModal","coupon","setCoupon","isValidCoupon","setIfIsValidCoupon","errorMessage","setErrorMessage","canSubmit","length","handleSubmit","a","formData","FormData","statements","document","querySelector","i","append","stripe","baseUrl","process","axios","post","headers","uploadResponse","requestId","data","request_id","checkoutResponse","sessionID","id","redirectToCheckout","sessionId","error","push","response","description","Container","fluid","Row","className","Col","justify-content-md-center","sm","Form","Group","FormText","controlId","Label","Dropdown","DropdownButton","title","variant","onSelect","e","Item","eventKey","File","onChange","fNames","target","name","label","multiple","custom","Text","muted","map","fName","Control","placeholder","value","console","log","pattern","RegExp","test","toLowerCase","uuidValidate","Button","onClick","block","style","color","backgroundColor","cursor","Image","src","logo","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","Modal","size","aria-labelledby","centered","Header","Title","Spinner","animation","role","defaultCopyButtonLabel","clickedCopyButtonLabel","SuccessCheckout","props","state","requestCopyButtonLabel","couponCopyButtonLabel","handleRequestIDCopyClick","setState","setTimeout","handleCouponCopyClick","this","then","res","catch","err","FormLabel","InputGroup","FormControl","disabled","Append","text","React","Component","SuccessCheckoutWithRouter","withRouter","FailCheckout","copyRequestIdButtonLabel","setCopyRequestIdButtonLabel","contactMail","trim","href","md","Checkout","query","URLSearchParams","useLocation","search","ri","get","success","Success","Fail","loadStripe","App","Navbar","bg","sticky","Nav","to","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a9a27a0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stripe_logo.1fd88ea7.svg\";","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {validate as uuidValidate} from 'uuid';\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    DropdownButton,\n    Form,\n    FormText,\n    Image,\n    Modal,\n    OverlayTrigger,\n    Row,\n    Spinner,\n    Tooltip\n} from \"react-bootstrap\";\nimport './Uplaod.css'\nimport logo from './stripe_logo.svg'\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction Upload({stripePromise}) {\n    const history = useHistory();\n\n    const defaultFormFileTitle = 'nothing selected';\n\n    const [year, setYear] = useState('2020')\n    const [type, setType] = useState('')\n    const [email, setEmail] = useState('')\n    const [files, setFiles] = useState([])\n    const [fullName, setFullName] = useState('')\n    const [validEmail, setValidEmail] = useState(false)\n    const [submitted, setSubmitted] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [coupon, setCoupon] = useState(\"\")\n    const [isValidCoupon, setIfIsValidCoupon] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleSelectYear = (e) => {\n        setYear(e)\n    }\n\n    const handleSelectType = (e) => {\n        setType(e)\n    }\n\n    const handleSelectedFiles = (e) => {\n        const fNames = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            fNames.push(e.target.files[i].name)\n        }\n        setFiles(fNames)\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n        const pattern = new RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\n        if (e.target.value != null) {\n            setValidEmail(pattern.test(e.target.value.toLowerCase()))\n        }\n    }\n\n    const handleFullNameChange = (e) => {\n        setFullName(e.target.value)\n        console.log(e.target.value)\n    }\n\n    const getFileControlTitle = () => {\n        if (files.length === 0) {\n            return defaultFormFileTitle;\n        }\n\n        if (files.length === 1) {\n            return \"1 file selected\";\n        } else {\n            return files.length + \" files selected\";\n        }\n    }\n\n    const canSubmit = () => {\n        return year !== '' && type !== '' && files.length > 0 && validEmail && fullName !== ''\n    }\n\n    const handleCouponChange = (e) => {\n        if (coupon.length + (e.target.value.length - coupon.length) > 36) {\n            return\n        }\n        if (uuidValidate(e.target.value)) {\n            setIfIsValidCoupon(true)\n        } else {\n            setIfIsValidCoupon(false)\n        }\n        setCoupon(e.target.value)\n        setErrorMessage('')\n    }\n\n    const handleSubmit = async () => {\n        if (submitted) {\n            return\n        }\n\n        setErrorMessage('')\n        setSubmitted(true)\n        setShowModal(true)\n        const formData = new FormData();\n        const statements = document.querySelector('#statements');\n        for (let i = 0; i < statements.files.length; i++) {\n            formData.append('statements', statements.files[i])\n        }\n\n        formData.append('type', type)\n        formData.append('year', year)\n        formData.append('email', email)\n        formData.append('fullName', fullName)\n        formData.append('coupon', coupon)\n\n        try {\n            const stripe = await stripePromise\n\n            const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\n            const uploadResponse = await axios.post(`${baseUrl}/api/statements/upload`, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            const requestId = uploadResponse.data.request_id;\n\n            if (!isValidCoupon) {\n                const checkoutResponse = await axios.post(`${baseUrl}/api/payments/create-checkout-session`,\n                    {\n                        \"request_id\": requestId,\n                    })\n                const sessionID = checkoutResponse.data.id\n                const result = await stripe.redirectToCheckout({\n                    sessionId: sessionID,\n                });\n\n                if (result.error) {\n                    history.push(\"/checkout?success=false&request_id=\" + requestId)\n                }\n            } else {\n                history.push(`/checkout?success=true&coupon=${coupon}&request_id=${requestId}`)\n            }\n        } catch (err) {\n            if (err.response && err.response.data && err.response.data.description) {\n                setErrorMessage(err.response.data.description)\n                return;\n            }\n            history.push(`/checkout?success=false`)\n        } finally {\n            setSubmitted(false)\n            setShowModal(false)\n        }\n    }\n\n    return (\n        <Container fluid id=\"upload-container\">\n            <Row className=\"justify-content-md-center\">\n                <Col justify-content-md-center sm={15}>\n                    <Form>\n                        <Form.Group className={\"text-center\"}>\n                            <FormText><h4>Submit new request</h4></FormText>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadYear\" id='form-group-year-dd'>\n                            <Form.Label className={\"text-start\"}>Select year</Form.Label>\n                            <Dropdown>\n                                <DropdownButton title={year !== '' ? year : 'select'} variant=\"outline-dark\"\n                                                id=\"dropdown-year\"\n                                                onSelect={handleSelectYear}>\n                                    <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                                </DropdownButton>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadType\">\n                            <Form.Label className={\"text-start\"}>Select type</Form.Label>\n                            <Dropdown>\n                                <DropdownButton title={type !== '' ? type : 'select'}\n                                                variant=\"outline-dark\" id=\"dropdown-type\"\n                                                onSelect={handleSelectType}>\n                                    <Dropdown.Item eventKey=\"revolut\">revolut</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"etoro\">etoro</Dropdown.Item>\n                                </DropdownButton>\n                            </Dropdown>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadStatements\">\n                            <Form.Label className={\"text-start\"}>Select statements</Form.Label>\n                            <Form.File onChange={handleSelectedFiles}\n                                       label={getFileControlTitle()}\n                                       id='statements'\n                                       type=\"file\" name=\"statements\" multiple custom/>\n                            {files.length === 0\n                                ? <Form.Text muted>\n                                    Tax calculations will be applied on selected files for {year}\n                                </Form.Text>\n                                : files.map((fName, i) =>\n                                    <Form.Text key={i} muted>\n                                        {fName}\n                                    </Form.Text>)\n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"formFullName\" id='form-group-full-name'>\n                            <Form.Label className={\"text-start\"}>Name</Form.Label>\n                            <Form.Control type=\"input\" placeholder=\"Enter name\"\n                                          onChange={handleFullNameChange}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\" id='form-group-email-id'>\n                            <Form.Label className={\"text-start\"}>Email</Form.Label>\n                            <Form.Control type=\"input\" placeholder=\"example@domain.com\"\n                                          onChange={handleEmailChange}/>\n                            <Form.Text muted>\n                                You will receive your report on the provided email\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formCoupon\" id='form-group-coupon'>\n                            <Form.Label className={\"text-start\"}>Coupon</Form.Label>\n                            <Form.Control type=\"input\" placeholder=\"Enter coupon if available\"\n                                          value={coupon}\n                                          onChange={handleCouponChange}/>\n                            <Form.Text muted>\n                                You will skip payments is it's a valid code\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formSubmitButton\" id='form-group-submit-btn-id'>\n                            {\n                                canSubmit() && isValidCoupon ?\n                                    <Button title=\"submit\" variant=\"success\"\n                                            onClick={handleSubmit}\n                                            block>\n                                        Submit\n                                    </Button> :\n                                    (!canSubmit() ?\n                                            <OverlayTrigger\n                                                placement=\"top\"\n                                                delay={{show: 250, hide: 400}}\n                                                overlay={\n                                                    <Tooltip>\n                                                        Select statements, type and input your name and email to submit\n                                                    </Tooltip>\n                                                }>\n                                                <Button title=\"submit\"\n                                                        className=\"btn-outline-dark\"\n                                                        style={{\n                                                            color: \"#FFF\",\n                                                            backgroundColor: \"#5433FF\"\n                                                        }}>\n                                                    Submit and checkout with\n                                                    <Image className='align-content-end' src={logo}/>\n                                                </Button>\n                                            </OverlayTrigger> :\n                                            <Button title=\"submit\"\n                                                    className=\"btn-outline-dark\"\n                                                    onClick={handleSubmit}\n                                                    style={{\n                                                        color: \"#FFF\",\n                                                        backgroundColor: \"#5433FF\",\n                                                        cursor: \"pointer\"\n                                                    }}>\n                                                Submit and checkout with\n                                                <Image className='align-content-end' src={logo}/>\n                                            </Button>\n                                    )\n                            }\n                            <FormText className=\"text-danger\">{errorMessage}</FormText>\n                        </Form.Group>\n                    </Form>\n                </Col>\n            </Row>\n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={showModal}\n            >\n                <Modal.Header>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Processing request &nbsp;\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </Modal.Title>\n                </Modal.Header>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default Upload;","import {Button, Form, FormControl, FormLabel, FormText, InputGroup} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport {withRouter} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from 'react';\nimport axios from \"axios\";\n\nconst defaultCopyButtonLabel = \"Copy\";\nconst clickedCopyButtonLabel = \"Copied\";\n\nclass SuccessCheckout extends React.Component {\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    };\n\n    requestId = this.props.requestId\n    state = {\n        coupon: \"\",\n        requestCopyButtonLabel: defaultCopyButtonLabel,\n        couponCopyButtonLabel: defaultCopyButtonLabel,\n    }\n\n    componentDidMount() {\n        const baseUrl = process.env.REACT_APP_API_BASE_URL;\n        axios.post(`${baseUrl}/api/payments/obtain-coupon`,\n            {\n                \"request_id\": this.requestId,\n            })\n            .then(res => {\n                const coupon = res.data.coupon\n                if (this.state.coupon !== \"\" && coupon === \"\") {\n                    return\n                }\n                this.setState({...this.state, coupon})\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleRequestIDCopyClick = () => {\n        this.setState({...this.state, requestCopyButtonLabel: clickedCopyButtonLabel})\n        setTimeout(() =>\n            this.setState({...this.state, requestCopyButtonLabel: defaultCopyButtonLabel}), 500\n        )\n    }\n\n    handleCouponCopyClick = () => {\n        this.setState({...this.state, couponCopyButtonLabel: clickedCopyButtonLabel})\n        setTimeout(() =>\n            this.setState({...this.state, couponCopyButtonLabel: defaultCopyButtonLabel}), 500\n        )\n    }\n\n    render() {\n        const {history} = this.props;\n        return (\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\">\n                        <h4>Your request was processed successfully and a report is on its way to your mailbox</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <FormLabel>Request ID</FormLabel>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.requestId}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={this.requestId}>\n                                <Button disabled={this.requestId == null || this.requestId === \"\"}\n                                        variant={\"outline-secondary\"}\n                                        onClick={this.handleRequestIDCopyClick}>{this.state.requestCopyButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <FormLabel>Coupon code</FormLabel>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={this.state.coupon}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={this.state.coupon}>\n                                <Button disabled={this.state.coupon === \"\"}\n                                        variant={\"outline-secondary\"}\n                                        onClick={this.handleCouponCopyClick}>{this.state.couponCopyButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n            </Form>\n        )\n    }\n}\n\nconst SuccessCheckoutWithRouter = withRouter(SuccessCheckout);\n\nexport default SuccessCheckoutWithRouter;","import {Button, Form, FormControl, FormText, InputGroup, Row} from \"react-bootstrap\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport React, {useState} from \"react\";\nimport {useHistory} from 'react-router-dom';\n\nfunction FailCheckout({requestId}) {\n    const history = useHistory();\n\n    const defaultCopyButtonLabel = \"Copy\";\n    const clickedCopyButtonLabel = \"Copied\";\n\n    let [copyRequestIdButtonLabel, setCopyRequestIdButtonLabel] = useState(defaultCopyButtonLabel);\n    const contactMail = process.env.REACT_APP_CONTACT_EMAIL;\n\n    const handleRequestIDCopyClick = () => {\n        setCopyRequestIdButtonLabel(clickedCopyButtonLabel)\n        setTimeout(() =>\n            setCopyRequestIdButtonLabel(defaultCopyButtonLabel), 500\n        )\n    }\n    return (\n        requestId != null && requestId.trim(\" \") !== \"\" ?\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\"><h4>Unfortunately, we could not process your payment</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <InputGroup className=\"mb-2\">\n                        <FormControl\n                            value={requestId}\n                            disabled\n                            className=\"text-center\"\n                            placeholder=\"\"\n                        />\n                        <InputGroup.Append>\n                            <CopyToClipboard text={requestId}>\n                                <Button variant={\"outline-secondary\"}\n                                        onClick={handleRequestIDCopyClick}>{copyRequestIdButtonLabel}</Button>\n                            </CopyToClipboard>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    <FormText>\n                        Above is your request ID. Please try submitting another request or send this to <a\n                        href={\"mailto:\" + contactMail}\n                        className={\"border-bottom\"}>{contactMail}</a> and ask for details\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Button block onClick={() => history.push(\"/\")}>Try again</Button>\n            </Form> :\n            <Form>\n                <Form.Group>\n                    <FormText className=\"text-center\"><h4>Your request failed</h4>\n                    </FormText>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <p>\n                        You were not charged for this operation. If this happened more than once please\n                        contact <a\n                        href={\"mailto:\" + contactMail}\n                        className={\"border-bottom\"}>{contactMail}</a> for more details.\n                        Sorry for the inconvenience.\n                    </p>\n                </Form.Group>\n                <br/>\n                <br/>\n                <Row md={15} className={\"justify-content-md-center\"}>\n                    <Button onClick={() => history.push(\"/\")}>Try again</Button>\n                </Row>\n            </Form>\n    )\n}\n\nexport default FailCheckout;","import {useLocation} from \"react-router-dom\";\nimport SuccessCheckoutWithRouter from \"./Success\";\nimport FailCheckout from \"./Fail\";\nimport './Checkout.css'\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport * as React from \"react\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Checkout() {\n    let query = useQuery()\n    let ri = query.get(\"request_id\")\n    let success = query.get(\"success\")\n\n    return (\n        <Container fluid id=\"checkout-container\">\n            <Row className=\"justify-content-md-center\">\n                <Col className=\"justify-content-md-center\" md={7} sm={15}>\n                    {\n                        success === \"true\" ?\n                            <SuccessCheckoutWithRouter requestId={ri}/> :\n                            <FailCheckout requestId={ri}/>\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Checkout;","import './App.css';\nimport Upload from \"./components/upload/Upload\";\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\nimport {Elements} from \"@stripe/react-stripe-js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {BrowserRouter as Router, HashRouter, Route, Switch} from \"react-router-dom\";\nimport Checkout from \"./components/checkout/Checkout\";\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_SECRET);\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Navbar bg=\"dark\" variant=\"dark\" sticky={\"top\"}>\n                    <Nav className=\"mr-auto\">\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link href=\"\">Submit statements</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link href=\"\">Instructions</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to={\"/checkout\"}>\n                            <Nav.Link href=\"\">Pricing</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar>\n\n                <Switch>\n                    <Container>\n                        <Route path=\"/\" exact>\n                            <Elements stripe={stripePromise}>\n                                <Upload stripePromise={stripePromise}/>\n                            </Elements>\n                        </Route>\n                        <Route path=\"/checkout\">\n                            <Checkout/>\n                        </Route>\n                    </Container>\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}