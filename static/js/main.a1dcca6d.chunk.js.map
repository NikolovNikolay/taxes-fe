{"version":3,"sources":["components/upload/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","useState","year","setYear","type","setType","Container","Row","className","Col","Form","Group","controlId","File","label","name","multiple","Text","Dropdown","DropdownButton","title","variant","id","onSelect","e","console","log","Item","eventKey","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAyDeA,MArDf,WAAmB,IAAD,EAEUC,mBAAS,QAFnB,mBAEPC,EAFO,KAEDC,EAFC,OAGUF,mBAAS,IAHnB,mBAGPG,EAHO,KAGDC,EAHC,KAcd,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,UAAU,oBAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,uBAAtB,UACI,cAACF,EAAA,EAAKG,KAAN,CAAWC,MAAM,oBAAoBV,KAAK,OAAOW,KAAK,aAAaC,UAAQ,IAC3E,cAACN,EAAA,EAAKO,KAAN,CAAWT,UAAU,aAArB,wEAKJ,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,SACI,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,cAAcC,QAAQ,eAAeC,GAAG,gBAC9CC,SAxBnB,SAACC,GACtBC,QAAQC,IAAIF,GACZrB,EAAQqB,IAqBgB,SAEI,cAACN,EAAA,EAASS,KAAV,CAAeC,SAAS,OAAxB,oBAEJ,cAAClB,EAAA,EAAKO,KAAN,UAAW,iCAASf,WAI5B,cAACQ,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,SACI,eAACM,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,MAAM,cAAcC,QAAQ,eAAeC,GAAG,gBAC9CC,SA7BnB,SAACC,GACtBC,QAAQC,IAAIF,GACZnB,EAAQmB,IA0BgB,UAEI,cAACN,EAAA,EAASS,KAAV,CAAeC,SAAS,UAAxB,qBACA,cAACV,EAAA,EAASS,KAAV,CAAeC,SAAS,QAAxB,sBAEJ,cAAClB,EAAA,EAAKO,KAAN,UAAW,iCAASb,qB,MC/BrCyB,MAVf,WACI,OACI,qBAAKrB,UAAU,MAAf,SACI,cAACF,EAAA,EAAD,UACI,cAAC,EAAD,SCEDwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1dcca6d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport {Col, Container, Dropdown, DropdownButton, Form, Row} from \"react-bootstrap\";\n\nfunction Upload() {\n\n    const [year, setYear] = useState('2020')\n    const [type, setType] = useState('')\n\n    const handleSelectYear = (e) => {\n        console.log(e);\n        setYear(e)\n    }\n\n    const handleSelectType = (e) => {\n        console.log(e);\n        setType(e)\n    }\n    return (\n        <Container>\n            <Row className=\"align-items-start\">\n                <Col>\n                    <Form>\n                        <Form.Group controlId=\"formUploadStatements\">\n                            <Form.File label=\"Select statements\" type=\"file\" name=\"statements\" multiple/>\n                            <Form.Text className=\"text-muted\">\n                                Tax calculations will be applied on selected files only\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formUploadYear\">\n                            <Dropdown>\n                                <DropdownButton title=\"Select year\" variant=\"outline-dark\" id=\"dropdown-year\"\n                                                onSelect={handleSelectYear}>\n                                    <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{year}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formUploadType\">\n                            <Dropdown>\n                                <DropdownButton title=\"Select type\" variant=\"outline-dark\" id=\"dropdown-type\"\n                                                onSelect={handleSelectType}>\n                                    <Dropdown.Item eventKey=\"revolut\">revolut</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"etoro\">etoro</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{type}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Upload;","import './App.css';\nimport Upload from \"./components/upload/Upload\";\nimport {Container} from \"react-bootstrap\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Container>\n                <Upload/>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}