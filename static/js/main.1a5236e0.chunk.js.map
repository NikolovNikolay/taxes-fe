{"version":3,"sources":["components/upload/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","useState","year","setYear","type","setType","files","setFiles","Container","fluid","className","Row","Col","md","Form","Group","controlId","File","onChange","e","fNames","console","log","i","target","length","push","name","label","multiple","custom","Text","muted","map","fName","Dropdown","DropdownButton","title","variant","id","alignRight","onSelect","Item","eventKey","Button","onClick","alert","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a5236e0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {useState} from \"react\";\nimport {Button, Col, Container, Dropdown, DropdownButton, Form, OverlayTrigger, Row, Tooltip} from \"react-bootstrap\";\n\nfunction Upload() {\n\n    const defaultFormFileTitle = 'Select statements';\n    const [year, setYear] = useState('2020')\n    const [type, setType] = useState('')\n    const [files, setFiles] = useState([])\n\n    const handleSelectYear = (e) => {\n        setYear(e)\n    }\n\n    const handleSelectType = (e) => {\n        setType(e)\n    }\n\n    const handleSelectedFiles = (e) => {\n        const fNames = []\n        console.log(e)\n        for (let i = 0; i < e.target.files.length; i++) {\n            fNames.push(e.target.files[i].name)\n        }\n        setFiles(fNames)\n    }\n\n    const getFileControlTitle = () => {\n        if (files.length === 0) {\n            return defaultFormFileTitle;\n        }\n\n        if (files.length === 1) {\n            return \"1 file selected\";\n        } else {\n            return files.length + \" files selected\";\n        }\n    }\n\n    const canSubmit = () => {\n        return year !== '' && type !== '' && files.length > 0\n    }\n\n    return (\n        <Container fluid className=\"align-content-center\">\n            <Row>\n                <Col/>\n                <Col md={15}>\n                    <Form>\n                        <Form.Group controlId=\"formUploadStatements\">\n                            <Form.File onChange={handleSelectedFiles}\n                                       label={getFileControlTitle()}\n                                       type=\"file\" name=\"statements\" multiple custom/>\n                            {files.length === 0\n                                ? <Form.Text muted>\n                                    Tax calculations will be applied on selected files\n                                </Form.Text>\n                                : files.map((fName, i) =>\n                                    <Form.Text key={i} muted>\n                                        {fName}\n                                    </Form.Text>)\n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadYear\">\n                            <Dropdown>\n                                <DropdownButton title=\"Select year\" variant=\"outline-dark\" id=\"dropdown-year\"\n                                                alignRight\n                                                onSelect={handleSelectYear}>\n                                    <Dropdown.Item eventKey=\"2020\">2020</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{year}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formUploadType\">\n                            <Dropdown>\n                                <DropdownButton title=\"Select type\"\n                                                variant=\"outline-dark\" id=\"dropdown-type\"\n                                                alignRight\n                                                onSelect={handleSelectType}>\n                                    <Dropdown.Item eventKey=\"revolut\">revolut</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"etoro\">etoro</Dropdown.Item>\n                                </DropdownButton>\n                                <Form.Text><strong>{type}</strong></Form.Text>\n                            </Dropdown>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formSubmitButton\">\n                            {\n                                canSubmit() ?\n                                    <Button title=\"submit\" variant=\"success\"\n                                            onClick={() => {\n                                                alert(\"click\");\n                                            }}>\n                                        Submit\n                                    </Button> :\n                                    <OverlayTrigger\n                                        placement=\"right\"\n                                        delay={{show: 250, hide: 400}}\n                                        overlay={\n                                            <Tooltip id=\"button-tooltip\">Select statements and type to\n                                                submit\n                                            </Tooltip>\n                                        }\n                                    >\n                                        <Button title=\"submit\" variant=\"outline-danger\">Submit</Button>\n                                    </OverlayTrigger>\n                            }\n                        </Form.Group>\n                    </Form>\n                </Col>\n                <Col/>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Upload;","import './App.css';\nimport Upload from \"./components/upload/Upload\";\nimport {Container} from \"react-bootstrap\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Container>\n                <Upload/>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}